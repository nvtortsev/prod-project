module.exports = {
    env: {
        browser: true,
        es2021: true,
        jest: true,
    },
    extends: [
        'plugin:react/recommended',
        'airbnb',
        'plugin:i18next/recommended',
        'prettier',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaFeatures: {
            jsx: true,
        },
        ecmaVersion: 'latest',
        sourceType: 'module',
    },
    plugins: ['react', '@typescript-eslint', 'i18next'],
    rules: {
        'i18next/no-literal-string': ['error', { markupOnly: true }],
        'react/jsx-indent': [2, 4],
        'react/jsx-indent-props': [2, 4],
        indent: [2, 4],
        'react/jsx-filename-extension': [
            2,
            { extensions: ['.js', '.jsx', '.tsx'] },
        ],
        // Что делает:
        // Отключает проверку, что импортируемый модуль существует и может быть разрешен.
        // Зачем:
        // Иногда могут возникать ложные срабатывания или сложности с настройками путей.
        'import/no-unresolved': 'off',
        // Что делает:
        // Отключает рекомендацию использовать экспорт по умолчанию,
        // если в модуле только один экспорт.
        // Зачем:
        // Позволяет использовать именованные экспорты даже при наличии одного элемента.
        'import/prefer-default-export': 'off',
        // Что делает:
        // Выдает предупреждение (а не ошибку), если есть объявленные переменные,
        // которые не используются в коде.
        // Зачем:
        // Помогает выявлять неиспользуемый код без блокировки сборки.
        'no-unused-vars': 'warn',
        // Что делает:
        // Отключает требование задавать defaultProps для компонентов React, использующих пропсы.
        // Зачем:
        // Позволяет не задавать значения по умолчанию для пропсов.
        'react/require-default-props': 'off',
        // Что делает:
        // Отключает необходимость импортировать React в файлах с JSX.
        // Зачем:
        // Облегчает работу с новыми версиями React.
        'react/react-in-jsx-scope': 'off',
        // Что делает:
        // Выдает предупреждение при использовании оператора spread ({...props}) в JSX.
        // Зачем:
        // Чтобы избегать нежелательного распространения пропсов,
        // но при этом не блокировать полностью.
        'react/jsx-props-no-spreading': 'warn',
        // Что делает:
        // Отключает правило,
        // требующее определять компоненты как функции-выражения или стрелочные функции.
        // Зачем:
        // Позволяет писать компоненты любым способом.
        'react/function-component-definition': 'off',
        // Что делает:
        // Отключает проверку на переопределение переменных
        // из внешней области видимости (тень переменной).
        // Зачем:
        // Может быть полезно, если переопределение переменных допустимо или удобно.
        'no-shadow': 'off',
        // Что делает:
        // Отключает требование указывать расширения файлов при импорте.
        // Зачем:
        // Упрощает импорт без необходимости явно указывать .js, .jsx, .ts, и т.п.
        'import/extensions': 'off',
        // Что делает:
        // Отключает проверку на наличие зависимостей в package.json, которые используются в файле.
        // Зачем:
        // Может быть полезно при локальной разработке или специфичных настройках.
        'import/no-extraneous-dependencies': 'off',
        // Что делает:
        // Отключает запрет на использование переменных или свойств с подчеркиванием
        // в начале или конце имени (например, _id).
        // Зачем:
        // Иногда это необходимо для работы с API или библиотеками, использующими такие имена.
        'no-underscore-dangle': 'off',
    },
    globals: {
        __IS_DEV__: true,
    },
};
